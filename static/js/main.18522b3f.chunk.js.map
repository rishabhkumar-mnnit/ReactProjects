{"version":3,"sources":["redux/todoTypes.js","components/Todo.js","redux/todoActions.js","redux/todoReducer.js","redux/rootReducer.js","redux/store.js","App.js","index.js"],"names":["ADD_ITEM","DELETE_ITEM","connect","state","value","todo","dispatch","addItem","val","type","info","payload","deleteItem","id","props","useState","setVal","Card","Header","Body","Form","Row","Button","variant","Badge","length","Col","xs","lg","md","Control","placeholder","onChange","e","target","onClick","alert","title","map","index","className","style","display","justifyContent","initialState","todoReducer","action","console","log","slice","rootReducer","combineReducers","store","createStore","rootStore","applyMiddleware","logger","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18522b3f.chunk.js","sourcesContent":["export const ADD_ITEM = 'ADD_ITEM'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'","\r\nimport React,{useState} from 'react';\r\nimport {Card,Button,Form,Col,Row,Badge} from 'react-bootstrap'\r\n// import {AiFillPlusCircle} from 'react-icons/ai'\r\n// import {FcTodoList} from 'react-icons/fc'\r\n// import {FaMinus} from 'react-icons/fa'\r\nimport '../components/todo.css';\r\nimport { connect } from 'react-redux';\r\nimport {addItem,deleteItem} from '../redux'\r\n\r\nfunction Todo (props) {\r\n    const [val,setVal] = useState(\"\")\r\n\r\n    const deleteHandler = (id) => {\r\n        props.deleteItem(id)\r\n        \r\n    }\r\n\r\n    const addItemHandler = () => {\r\n        (val === \"\")?(alert(\"Task should not be empty\")):(props.addItem(val))\r\n        setVal(\"\")\r\n    }\r\n    return(\r\n        <Card >\r\n           <Card.Header>{' '}TODO APP </Card.Header>\r\n            <Card.Body>\r\n                <Form>\r\n                    <Form.Row>\r\n                    <Button variant=\"success\">\r\n                        Total Tasks <Badge variant=\"light\">{' '}{props.value.length}</Badge>\r\n                    </Button>\r\n                    </Form.Row>\r\n                    <br></br>\r\n                    <Form.Row>\r\n                        <Col xs lg md = {10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Type here..\" value={val} onChange={(e) => setVal(e.target.value)}></Form.Control>\r\n                        </Col>\r\n                        <Col xs md lg ={2}>\r\n                            <Button variant=\"primary\" onClick={() => addItemHandler() } title=\"Add New Item\"> Add {' '}+</Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <hr></hr>\r\n                <div>\r\n                    {  \r\n                        (props.value.length > 0) ? \r\n                        (props.value.map((val,index) => {\r\n                            return (\r\n                                <div key={index}>                                \r\n                                    <Row key={index}>\r\n                                        <Col xs md lg = {11} className=\"todo\">\r\n                                            <span>{val}</span>\r\n                                        </Col>\r\n                                        <Col xs md lg = {1}>\r\n                                            <Button id = {index} variant=\"danger\"  onClick={(e) => deleteHandler(e.target.id)} >-</Button> \r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br></br>\r\n                                </div>\r\n                            );\r\n                        })):(<div style={{display:'flex', justifyContent:'center'}}>Nothing to display</div>)\r\n                    }\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value:state.todo.value\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addItem: val => dispatch(addItem(val)),\r\n        deleteItem: (id) => dispatch(deleteItem(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo)","import {ADD_ITEM,DELETE_ITEM} from './todoTypes'\r\n\r\nexport const addItem = (val) => {\r\n    return {\r\n        type:ADD_ITEM,\r\n        info:'addItem',\r\n        payload:val\r\n    }\r\n}\r\n\r\nexport const deleteItem = (index) => {\r\n    return {\r\n        type:DELETE_ITEM,\r\n        info:'deleteItem',\r\n        payload:index\r\n    }\r\n}","import {ADD_ITEM,DELETE_ITEM} from './todoTypes';\r\n\r\nconst initialState = {\r\n    value:[]\r\n}\r\n\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    console.log({state});\r\n    console.log(action.payload);\r\n    switch(action.type) {\r\n        case ADD_ITEM:return {\r\n            ...state,\r\n            value:[...state.value,action.payload]\r\n        }\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                value: [...state.value.slice(0, action.payload), ...state.value.slice(action.payload + 1)]\r\n              }\r\n        default:return state\r\n    }\r\n}\r\n\r\nexport default todoReducer","import {combineReducers} from 'redux'\r\nimport todoReducer from '../redux/todoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    todo:todoReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import {createStore,applyMiddleware} from 'redux';\r\nimport rootStore from './rootReducer.js';\r\nimport logger from 'redux-logger';\r\nconst store = createStore(rootStore,applyMiddleware(logger))\r\n\r\nexport default store\r\n","\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport Todo from './components/Todo'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from 'react-bootstrap'\nimport store from './redux/store';\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <Container >\n      <Todo/>\n    </Container>\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}