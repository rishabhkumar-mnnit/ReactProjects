{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\React-Reducer\\\\todo_app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Button, Form, Col, Row } from 'react-bootstrap';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport { FcTodoList } from 'react-icons/fc';\nimport { FaMinus } from 'react-icons/fa';\nimport '../components/todo.css';\nimport { connect } from 'react-redux';\nimport { addItem, deleteItem } from '../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [val, setVal] = useState(\"\");\n\n  const deleteHandler = id => {\n    props.deleteItem(id);\n  };\n\n  const addItemHandler = () => {\n    val === \"\" ? alert(\"Task should not be empty\") : props.addItem(val);\n    setVal(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(FcTodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), ' ', \"TODO APP \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            lg: true,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Type here..\",\n              value: val,\n              onChange: e => setVal(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            md: true,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => addItemHandler(),\n              title: \"Add New\",\n              children: [\" Add New\", ' ', /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 118\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.value.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: true,\n                md: true,\n                lg: 11,\n                className: \"todo\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: val\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: true,\n                md: true,\n                lg: 1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  id: index,\n                  variant: \"danger\",\n                  onClick: e => deleteHandler(e.target.id),\n                  children: /*#__PURE__*/_jsxDEV(FaMinus, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 129\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"Lq0ply4G+rdvXtcwtMmWL5KauAQ=\");\n\n_c = Todo;\n\nconst mapStateToProps = state => {\n  return {\n    value: state.todo.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItem: val => dispatch(addItem(val)),\n    deleteItem: id => dispatch(deleteItem(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["E:/project/React-Reducer/todo_app/src/components/Todo.js"],"names":["React","useState","Card","Button","Form","Col","Row","AiFillPlusCircle","FcTodoList","FaMinus","connect","addItem","deleteItem","Todo","props","val","setVal","deleteHandler","id","addItemHandler","alert","e","target","value","map","index","mapStateToProps","state","todo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React,{useState} from 'react';\r\nimport {Card,Button,Form,Col,Row} from 'react-bootstrap'\r\nimport {AiFillPlusCircle} from 'react-icons/ai'\r\nimport {FcTodoList} from 'react-icons/fc'\r\nimport {FaMinus} from 'react-icons/fa'\r\nimport '../components/todo.css';\r\nimport { connect } from 'react-redux';\r\nimport {addItem,deleteItem} from '../redux'\r\n\r\nfunction Todo (props) {\r\n    const [val,setVal] = useState(\"\")\r\n\r\n    const deleteHandler = (id) => {\r\n        props.deleteItem(id)\r\n        \r\n    }\r\n\r\n    const addItemHandler = () => {\r\n        (val === \"\")?(alert(\"Task should not be empty\")):(props.addItem(val))\r\n        setVal(\"\")\r\n    }\r\n    return(\r\n        <Card >\r\n           <Card.Header><FcTodoList/>{' '}TODO APP </Card.Header>\r\n            <Card.Body>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Col xs lg md = {10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Type here..\" value={val} onChange={(e) => setVal(e.target.value)}></Form.Control>\r\n                        </Col>\r\n                        <Col xs md lg ={2}>\r\n                            <Button variant=\"primary\" onClick={() => addItemHandler() } title=\"Add New\"> Add New{' '}<AiFillPlusCircle/></Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <hr></hr>\r\n                <div>\r\n                    {  \r\n                    \r\n                        props.value.map((val,index) => {\r\n                            return (\r\n                                <div key={index}>                                \r\n                                    <Row key={index}>\r\n                                        <Col xs md lg = {11} className=\"todo\">\r\n                                            <span>{val}</span>\r\n                                        </Col>\r\n                                        <Col xs md lg = {1}>\r\n                                            <Button id = {index} variant=\"danger\"  onClick={(e) => deleteHandler(e.target.id)} ><FaMinus/></Button> \r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br></br>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    \r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value:state.todo.value\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addItem: val => dispatch(addItem(val)),\r\n        deleteItem: (id) => dispatch(deleteItem(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo)"]},"metadata":{},"sourceType":"module"}